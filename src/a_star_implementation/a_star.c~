#include "constants.h"
#include "a_star.h"
#include "graph.h"
#include "a_star_implementation.h"
#include <stdlib.h>
#include <stdio.h>
#include <math.h>

A_STAR * new_a_star() {
  A_STAR *as = malloc(sizeof(A_STAR));
  as->start = -1;
  as->target = -1;
  as->n_of_nodes = 0;
  as->distance_from_start = NULL;
  as->came_from = NULL;
  as->heap = new_heap();
  return as;
}

void set_start(A_STAR *a, int start) {
  as->start = start;
}

void set_target(A_STAR *a, int target) {
  as->target = target;
}

void prepare_a_star(A_STAR *a, GRAPH *g) {
  int g_num = g->number_of_nodes,i;
  if (a->n_of_nodex == 0) {
	as->distance_from_start = malloc(g_num * sizeof(double));
	as->came_from = malloc(g_num * sizeof(int));
  } else if (g_num != a->n_of_nodes) {
	as->distance_from_start = realloc(as->distance_from_start, g_num * sizeof(double));
	as->came_from = realloc(as->came_from, g_num * sizeof(int));
  }
  as->n_of_nodes = g_num;
  for (i=0; i<g_num; i++) {
	as->distance_from_start[i] = -1.0;
	as->came_from[i] = -1;
  }
}

/* assuming that the box is prepared etc */
int search_path(A_STAR *a, GRAPH *g) {
  if 
}
